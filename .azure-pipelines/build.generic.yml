parameters:
- name: buildConfiguration
  type: string
  default: 'Release'
- name: postBuildSteps
  type: stepList
  default: []

resources:
  containers:
  - container: mssql
    image: mcr.microsoft.com/mssql/server:2022-latest
    env:
      ACCEPT_EULA: Y
      SA_PASSWORD: $(SA_PASSWORD)
      MSSQL_PID: Developer
    ports: 
      - 1433:1433
    options: --name mssql

variables:
  #Used for SQL Server password, placed in variable group. Comment group and uncomment SA_PASSWORD variable
#- name: SA_PASSWORD
#  value: '<<SECRET VALUE>>'
- group: TodoItemsApi-Build
- name: DOTNET_NOLOGO
  value: false
  readonly: true
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE 
  value: true
  readonly: true
  #Override to create env variable to have control where the global packages are stored for caching: https://learn.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders
- name: NUGET_PACKAGES
  value: '$(Pipeline.Workspace)/.nuget/packages/'
  readonly: true

stages:
- stage: Build
  dependsOn: []
  jobs:
  - template: build.yml
    parameters:
      postBuildSteps: ${{parameters.postBuildSteps}}
      buildConfiguration: ${{parameters.buildConfiguration}}

- stage: Deploy
  dependsOn: [Build]
  jobs:
  - template: create_env.yml
    parameters:
      template: main.nodocker.webapp.bicep
  - template: deploy.nodocker.yml
  - template: deploy.sql.yml

- stage: Delete
  dependsOn: [Deploy]
  jobs:
  - deployment: Delete
    environment: todoItems-teardown
    variables:
      - name: resourcegroupName
        value: $[ stageDependencies.Deploy.Create_Env.outputs['Create_Env.DetermineResourcegroupName.resourcegroupName'] ]
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az group delete --resource-group $(resourcegroupName) --yes'
 
