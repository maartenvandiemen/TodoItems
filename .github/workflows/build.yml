on:
  workflow_call:
    inputs:
      buildConfiguration:
        required: true
        type: string
    secrets:
      SA_PASSWORD:
        required: true
defaults:
  run:
    shell: pwsh
jobs:
  build:
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{secrets.SA_PASSWORD}}
          MSSQL_PID: Developer
        options: --name mssql
        ports:
          - 1433:1433
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: '${{github.workspace}}/.nuget/packages'
      testDatabasename: 'TodoItemDB'
    steps:    
    - uses: actions/checkout@v4

      #Sometimes we get a TOOMANYREQUESTS response. Retry before breaking the build in this case.    
    - name: Run Trivy Analysis
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 2
        max_attempts: 3
        retry_on: error
        command:  docker run --workdir /github/workspace --rm -v ${{github.workspace}}:/github/workspace -v ${{github.workspace}}/trivy:/github/artifact aquasec/trivy:latest fs -f json --scanners vuln,secret,misconfig --list-all-pkgs -o /github/artifact/trivy-result.json /github/workspace
    
    - name: Parse Trivy Analysis results
      run: docker run --workdir /github/artifact --rm -v ${{github.workspace}}/trivy:/github/artifact aquasec/trivy:latest convert -f table --exit-code -1 -s HIGH,CRITICAL trivy-result.json

    - uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json
    
    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: ${{env.NUGET_PACKAGES}}
        key: ${{runner.os}}-build-${{ hashFiles('**/packages.lock.json', '!**/bin/**', '!**/obj/**') }}

    - name: Dotnet restore
      run: dotnet restore --locked-mode --nologo
    
    - name: Dotnet build
      run: dotnet build --no-restore --configuration ${{inputs.buildConfiguration}}
    
    - name: Restore tools
      run: dotnet tool restore
      working-directory: ${{github.workspace}}/TodoItems.Api
    
    - name: Create idempotent SQL scripts
      run: dotnet ef migrations script --output '${{github.workspace}}/artifacts/SQL/db.sql' --idempotent --project TodoItems.Api.csproj --context TodoDb --no-build --configuration ${{inputs.buildConfiguration}} 
      working-directory: ${{github.workspace}}/TodoItems.Api
      env:
        #Pass environment variable dummy. So the migration script will not be created against the InMemory database.
        ASPNETCORE_ENVIRONMENT: 'DUMMY'
    
    - name: Create database for integration tests
      run: |
          sqlcmd -S 127.0.0.1,1433 -U SA -P '${{secrets.SA_PASSWORD}}' -Q 'CREATE DATABASE ${{env.testDatabasename}}' -b
          sqlcmd -S 127.0.0.1,1433 -U SA -P '${{secrets.SA_PASSWORD}}' -i db.sql -d ${{env.testDatabasename}} -b
      working-directory: '${{github.workspace}}/artifacts/SQL'
      timeout-minutes: 1  
    
    - name: Run tests
      run: dotnet test --no-build --configuration ${{inputs.buildConfiguration}} --logger:"console;verbosity=detailed"
      env:
        integrationtests_ConnectionStrings__TodoDb: 'Server=127.0.0.1,1433;Database=${{env.testDatabasename}};User Id=SA;Password=${{secrets.SA_PASSWORD}};TrustServerCertificate=true;'
    
    - name: Bicep Lint
      run: |
        az bicep build --file main.docker.webapp.bicep
        az bicep build --file main.nodocker.webapp.bicep
      working-directory: Deployment

    - name: Publish Bicep artifact
      uses: actions/upload-artifact@v4
      with:
        name: infraCode
        path: '${{github.workspace}}/Deployment/*.bicep'
        if-no-files-found: error

    - name: Publish Smoketests artifact
      uses: actions/upload-artifact@v4
      with:
        name: smoketests
        path: '${{github.workspace}}/tests/**'
        if-no-files-found: error

    - name: Publish API
      run: dotnet publish ${{github.workspace}}/TodoItems.Api/TodoItems.Api.csproj --configuration ${{inputs.buildConfiguration}} --no-build --output ${{github.workspace}}/artifacts/TodoItems.Api
    
    - name: Publish SQL artifact
      uses: actions/upload-artifact@v4
      with:
        name: database
        path: '${{github.workspace}}/artifacts/SQL'
        if-no-files-found: error
    
    - name: Publish API artifact
      uses: actions/upload-artifact@v4
      with:
        name: todoItemsApi
        path: '${{github.workspace}}/artifacts/TodoItems.Api/**'
        if-no-files-found: error
