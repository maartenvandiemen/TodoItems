on:
  workflow_call: 
    inputs:
      resourcegroupName:
        type: string
        required: true
        description: Name of the resourcegroup where the information should be deployed to
      region:
        type: string
        required: true
        description: Azure region where the resource should be deployed
      template:
        type: string
        required: true
        description: location of the ARM or BICEP template
      additionalParameters:
        type: string
        required: false
        description: Arguments for the ARM or BICEP template
    secrets:
      AZURE_CREDENTIALS:
        required: true
        description: Azure Service Principal credentials
      SUBSCRIPTION:
        required: true
        description: ID (Guid) of the subscription
    outputs:
      webAppName:
        description: "Created webApp"
        value: ${{jobs.create_env.outputs.webAppName}}
      sqlServerFQDN: 
         description: Fully Qualified DomainName of the created Azure SQL Server
         value: ${{jobs.create_env.outputs.sqlServerFQDN}}
      databaseName:
         description: Created database
         value: ${{jobs.create_env.outputs.databaseName}}
defaults:
  run:
    shell: pwsh
jobs:
  create_env:
    runs-on: ubuntu-latest
    outputs:
      webAppName: ${{ steps.arm.outputs.webAppName }}
      sqlServerFQDN: ${{ steps.arm.outputs.sqlServerFQDN }}
      databaseName: ${{ steps.arm.outputs.databaseName }}
    environment: AzureProvision
    steps:
      - name: Download a bicep templates
        uses: actions/download-artifact@v3
        with:
          name: infraCode
          path: ${{github.workspace}}/artifacts/bicep

      - name: Azure login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Create resourcegroup ${{ inputs.resourcegroupName }}
        uses: azure/CLI@v1
        with:
          inlineScript: az group create --location ${{ inputs.region }} --name ${{ inputs.resourcegroupName }}

      - name: Deploy Azure infrastructure
        uses: azure/arm-deploy@v1
        id: arm
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION }}
          resourceGroupName: ${{ inputs.resourcegroupName }}
          template: ${{github.workspace}}${{ inputs.template }}
          parameters: ${{ inputs.additionalParameters }} sqlAdministratorLoginPassword=${{secrets.SA_PASSWORD}} sqlAdministratorLoginUser=${{secrets.AZURE_SQL_USER}}
      
      #Fix for issue: https://github.com/microsoft/azure-pipelines-tasks/issues/15532 also applicable for Github Action
      - name: Sync Azure Websites
        uses: Azure/powershell@v1
        with:
          inlineScript: |
              $token = Get-AzAccessToken
              $authHeader = @{
                  'Content-Type'='application/json'
                  'Authorization'='Bearer ' + $token.Token
              }
              $locations = @(
                # Europe
                "westeurope", "northeurope", "francesouth", "francecentral", "ukwest", "uksouth", "germanywestcentral", "norwayeast", "swedencentral", "switzerlandnorth",
                # Americas
                "brazilsouth", "canadacentral", "centralus", "eastus", "eastus2", "southcentralus", "westus2", "westus3",
                # Middle East
                "qatarcentral", "uaenorth",
                # Africa
                "southafricanorth",
                # Asia Pacific
                "australiaeast", "centralindia", "japaneast", "koreacentral", "southeastasia", "eastasia"
              )
              $locations | foreach-Object {
                  $restUrl = "https://$_.management.azure.com/subscriptions/${{secrets.SUBSCRIPTION}}/resourceGroups/${{inputs.resourcegroupName}}/providers/Microsoft.Web/sites/${{steps.arm.outputs.webAppName}}?api-version=2022-03-01";
                  Invoke-RestMethod -Uri $restUrl -Method Get -Headers $authHeader
              }
          azPSVersion: "latest"
